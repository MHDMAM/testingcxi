#step1(ng-if='steps===1')

  .row
    .col-90.center-block
      .form-container
        ion-slide-box.slider-card(on-slide-changed='slideHasChanged($index)', active-slide='viewData.selectedIndexStep1')
          ion-slide
            .slide-container
              .row.margin-bottom-xs
                .col-50.padding-right-medium
                  span.pol-value(translate='transactions.changeAddress.step1.adrs_line1') 
                    small.stable &nbsp;* 
                  label.item.item-input.input-margin(ng-class="{'form-error-input':thisForm.address1.$dirty && !thisForm.address1.$valid}")
                    input(type='text', name='address1', ng-model='data.addressInfo.address1', maxlength='30', required, capitalize, remove-set='notAcceptedChars', remove-characters, ng-change="addressLineAllows(data.addressInfo.address1)")
                  .error-container(ng-messages='thisForm.address1.$error', ng-if="thisForm.address1.$dirty")
                    small.error(ng-message='required', translate='transactions.changeAddress.msgs.address1_required')


                .col-50.padding-left-medium(ng-if='data.addressInfo.country==="MAL"')
                  span.pol-value(translate='transactions.changeAddress.step1.post_code')
                    small.stable &nbsp; *
                  label.item.item-input.input-margin(ng-class="{'form-error-input':thisForm.postCode.$dirty && !thisForm.postCode.$valid}")
                    input(type='tel', name='postCode', ng-model='data.addressInfo.postCode', maxlength='5', pattern='[0-9]{5}', ng-required='data.addressInfo.country==="MAL"')
                  .error-container(ng-messages='thisForm.postCode.$error', ng-if="thisForm.postCode.$dirty")
                    small.error(ng-message='required', translate='transactions.changeAddress.msgs.postCode_required')

              .row.margin-bottom-xs
                .col-50.padding-right-medium
                  span.pol-value(translate='transactions.changeAddress.step1.adrs_line2')
                  label.item.item-input.input-margin
                    input(type='text', name='address2', ng-model='data.addressInfo.address2', maxlength='30', capitalize, remove-set='notAcceptedChars', remove-characters, ng-change="addressLineAllows(data.addressInfo.address2)")
                  
                .col-50.padding-left-medium(ng-show='data.addressInfo.country==="MAL"')
                  span.pol-value(translate='transactions.changeAddress.step1.state')
                    small.stable &nbsp; *
                  label.item.item-input.selectArrow(ng-class="{'form-error-input':thisForm.state.$dirty && !thisForm.state.$valid}")
                    select(name='state', ng-model='data.addressInfo.state' ng-options='state as state for state in viewData.states', ng-required='data.addressInfo.country==="MAL"')
                  .error-container(ng-messages='thisForm.state.$error', ng-if="thisForm.state.$dirty")
                    small.error(ng-message='required', translate='transactions.changeAddress.msgs.state_required')

              .row.margin-bottom-xs
                .col-50.padding-right-medium
                  span.pol-value(translate='transactions.changeAddress.step1.adrs_line3')
                  label.item.item-input.input-margin
                    input(type='text', name='address3', ng-model='data.addressInfo.address3', maxlength='30', capitalize, remove-set='notAcceptedChars', remove-characters, ng-change="addressLineAllows(data.addressInfo.address3)")
                  
                .col-50.padding-left-medium
                  span.pol-value(translate='transactions.changeAddress.step1.country')
                    small.stable &nbsp; *
                  label.item.item-input.selectArrow(ng-class="{'form-error-input':thisForm.country.$dirty && !thisForm.country.$valid}")
                    select(name='country', ng-model='data.addressInfo.country' ng-options='country.key as country.country for country in viewData.countries', required)
                  .error-container(ng-messages='thisForm.country.$error', ng-if="thisForm.country.$dirty")
                    small.error(ng-message='required', translate='transactions.changeAddress.msgs.country_required')


          ion-slide
            .slide-container
              .row.margin-bottom-xs
                .col-50.padding-right-medium
                  .row
                    .col-33
                      span.pol-value(translate='transactions.changeAddress.step1.mobile_no')
                        small.stable &nbsp; *
                      label.item.item-input.input-margin.selectArrow(ng-class="{'form-error-input':thisForm.countryMobileCode.$dirty && !thisForm.countryMobileCode.$valid}")
                        //- input(type='tel', name='countryMobileCode', ng-model='data.countryMobileCode', maxlength='6', numbers, required)
                        select(name='countryMobileCode', ng-model='data.countryMobileCode', ng-options="country as country.country + ' ('+  country.callingCode +')' for country in viewData.countries", required)
                      .error-container(ng-messages='thisForm.countryMobileCode.$error', ng-if="thisForm.countryMobileCode.$dirty")
                        small.error(ng-message='required', translate='transactions.changeAddress.msgs.country_code_required')
                      .subline-container
                        span(translate='transactions.changeAddress.step1.country_code') 
                    .col-66.padding-left-medium                 
                      span.pol-value &nbsp;
                      label.item.item-input.input-margin(ng-class="{'form-error-input':thisForm.mobileNo.$dirty && !thisForm.mobileNo.$valid}")
                        input(type='tel', name='mobileNo', ng-model='data.policyOwnerInfo.newMobile', maxlength='16', numbers, required)
                      .error-container(ng-messages='thisForm.mobileNo.$error', ng-if="thisForm.mobileNo.$dirty")
                        small.error(ng-message='required', translate='transactions.changeAddress.msgs.mobile_required')
                      .subline-container
                        span(translate='transactions.changeAddress.step1.ope_code') &nbsp;
                        span(translate='transactions.changeAddress.step1.ex_mobile')
                  
                .col-50.padding-left-medium
                  .row
                    .col-33
                      span.pol-value(translate='transactions.changeAddress.step1.home_no')
                      label.item.item-input.input-margin.selectArrow
                        //- input(type='tel', name='countryHomeCode', ng-model='data.countryHomeCode', maxlength='6', numbers)
                        select(name='countryHomeCode', ng-model='data.countryHomeCode', ng-options="country as country.country + ' ('+  country.callingCode +')' for country in viewData.countries", ng-required='data.policyOwnerInfo.homeNo')
                      .subline-container
                        span(translate='transactions.changeAddress.step1.country_code')
                    .col-66.padding-left-medium                 
                      span.pol-value &nbsp;
                      label.item.item-input.input-margin
                        input(type='tel', name='homeNo', ng-model='data.policyOwnerInfo.homeNo', maxlength='16', numbers)
                      .subline-container
                        span(translate='transactions.changeAddress.step1.state_code')   &nbsp;
                        span(translate='transactions.changeAddress.step1.ex_home')

              .row.margin-bottom-xs
                .col-50.padding-right-medium
                  .row
                    .col-33
                      span.pol-value(translate='transactions.changeAddress.step1.office_no')
                      label.item.item-input.input-margin.selectArrow
                        //- input(type='tel', name='countryOfficeCode', ng-model='data.countryOfficeCode', maxlength='6', numbers)
                        select(name='countryOfficeCode', ng-model='data.countryOfficeCode', ng-options="country as country.country + ' ('+  country.callingCode +')' for country in viewData.countries", ng-required='data.policyOwnerInfo.officeNo')
                      .subline-container
                        span(translate='transactions.changeAddress.step1.country_code')
                    .col-66.padding-left-medium                 
                      span.pol-value &nbsp;
                      label.item.item-input.input-margin
                        input(type='tel', name='officeNo', ng-model='data.policyOwnerInfo.officeNo', maxlength='16', numbers)
                      .subline-container
                        span(translate='transactions.changeAddress.step1.state_code')   &nbsp;
                        span(translate='transactions.changeAddress.step1.ex_home')
                  
                .col-50.padding-left-medium
                  span.pol-value(translate='transactions.changeAddress.step1.email')
                    small.stable &nbsp; *
                  label.item.item-input.input-margin(ng-class="{'form-error-input':thisForm.email.$dirty && !thisForm.email.$valid}")
                    input(type='email', name='email', ng-model='data.policyOwnerInfo.newEmail', required, capitalize)
                  .error-container(ng-messages='thisForm.email.$error', ng-if="thisForm.email.$dirty")
                    small.error(ng-message='required', translate='transactions.changeAddress.msgs.email_required')
      .clearfix 
        span.pol-value.font-bold(translate='transactions.changeAddress.notes') |
      p(translate='transactions.changeAddress.notes_txt')
