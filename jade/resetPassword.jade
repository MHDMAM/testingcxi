//- ion-view(view-title='{{viewData.title}}')
//-   ion-content
//-     .loginBox
//-       .search-icon-wrapper
//-         img.search(src='img/key.svg')

//-       .card-padding.padding-top-none.margin-top-medium
//-         .form-container
//-           form(name='thisForm', ng-submit='singup()')
//-             //- customer ID
//-             label.item.item-input.input-margin(ng-class="{'form-error-input':thisForm.customerId.$dirty && !thisForm.staffName.$valid}")
//-               input(type='text', name='customerId' placeholder="{{'setPasswordBox.customer_id' | translate}}", ng-model='data.customerId', ng-model-options="{ updateOn: 'default blur', debounce: {'default': 500, 'blur': 0} }", required)
//-             .error-container(ng-messages='thisForm.customerId.$error', ng-if='thisForm.customerId.$dirty || thisForm.$submitted')
//-               small.err(ng-message='required',translate='setPasswordBox.msgs.name_is_required')
          
//-             label.item.item-input.input-margin(ng-class="{'form-error-input':thisForm.staffName.$dirty && !thisForm.staffName.$valid}")
//-               input(type='text', name='staffName' placeholder="{{'setPasswordBox.staff_name_placeholder' | translate}}", ng-model='data.staffName', ng-model-options="{ updateOn: 'default blur', debounce: {'default': 500, 'blur': 0} }", required)
//-             .error-container(ng-messages='thisForm.staffName.$error', ng-if='thisForm.staffName.$dirty || thisForm.$submitted')
//-               small.err(ng-message='required',translate='setPasswordBox.msgs.name_is_required')
            
//-             label.item.item-input.input-margin.item-stacked-label.selectArrow(ng-class="{'form-error-input':thisForm.branchId.$dirty && !thisForm.branchId.$valid}")
//-               select.formInput(name='branchId', ng-model='data.branchName', ng-options='item for item in viewData.branches', required)
//-                 option(value='') Select Branch.
//-             .error-container(ng-messages='thisForm.branchId.$error', ng-if='thisForm.branchId.$dirty || thisForm.$submitted') 
//-               small.err(ng-message='required',translate='setPasswordBox.msgs.branch_required')


//-             label.item.item-input.input-margin(ng-class="{'form-error-input':thisForm.password.$dirty && !thisForm.password.$valid}")
//-               input(type='password', name='password', ng-model='data.password', placeholder="{{'setPasswordBox.password_placeholder' | translate }}", aia-password, required)
//-             .error-container(ng-messages='thisForm.password.$error', ng-if='thisForm.password.$dirty || thisForm.$submitted')
//-               small.err(ng-message='required',translate='setPasswordBox.msgs.password_required')
//-               small.err(ng-message='aiapassword')
//-                 pre(translate='setPasswordBox.msgs.aiaPassword') 

//-             label.item.item-input.input-margin(ng-class="{'form-error-input':thisForm.confirmPassword.$dirty && !thisForm.confirmPassword.$valid}")
//-               input(type='password', name='confirmPassword', ng-model='data.confirmedPassword',  placeholder="{{'setPasswordBox.confirmPassword_placeholder' | translate }}" , password-comparison='data.password', password-equals, required)
//-             .error-container(ng-messages='thisForm.confirmPassword.$error', ng-if='thisForm.confirmPassword.$dirty || thisForm.$submitted')
//-               small.err(ng-message='required',translate='setPasswordBox.msgs.confirmPassword_required')
//-               small.err(ng-message='password-equals',translate='setPasswordBox.msgs.passwordequals_required')

//-             button.button-major.button.button-stable.button-full(type='submit', translate='setPasswordBox.submit', ng-disabled='thisForm.$invalid')

ion-view(view-title='{{viewData.title}}')
  ion-content.details-palan-wrapper

    .progress-container
      .progress-line
        .line
          .progress-50

        .stage.current
          span.step-number 1
          .step-label {{viewData.verify}}

        .stage
          span.step-number 2
          .step-label {{viewData.password}}

    .loginBox(style='margin-top:8%;')
      h2(translate='reset_password.reset_password')
        //- CX
      .card-padding.no-top-padding
        .form-container
          form(name='setPasswordForm')
            label.item.item-input.input-margin(ng-class="{'form-error-input':thisForm.staffId.$dirty && !thisForm.staffId.$valid}")
              input(type='text', name='staffId' placeholder="{{'reset_password.staffId_placeholder' | translate}}", ng-model='data.staffId', ng-model-options="{ updateOn: 'default blur', debounce: {'default': 500, 'blur': 0} }", required)
            .error-container(ng-messages='setPasswordForm.staffId.$error', ng-if="setPasswordForm.staffId.$dirty")
              small.error(ng-message='required', translate='reset_password.msgs.staff_Id_is_required')

            button.button-major.button.button-stable.button-full(type='submit', ng-click='next()', translate='reset_password.submit', ng-disabled='setPasswordForm.$invalid')